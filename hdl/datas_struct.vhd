-- VHDL Entity ece411.Datas.interface
--
-- Created:
--          by - baker30.ews (evrt-252-37.ews.illinois.edu)
--          at - 21:56:28 04/18/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY Datas IS
   PORT( 
      DataArrayIn : IN     LC3B_OWORD;
      DataWrite0  : IN     std_logic;
      DataWrite1  : IN     std_logic;
      DataWrite2  : IN     std_logic;
      DataWrite3  : IN     std_logic;
      DataWrite4  : IN     std_logic;
      DataWrite5  : IN     std_logic;
      DataWrite6  : IN     std_logic;
      DataWrite7  : IN     std_logic;
      Index       : IN     LC3B_C_INDEX;
      RESET_L     : IN     std_logic;
      DataOut0    : OUT    LC3B_OWORD;
      DataOut1    : OUT    LC3B_OWORD;
      DataOut2    : OUT    LC3B_OWORD;
      DataOut3    : OUT    LC3B_OWORD;
      DataOut4    : OUT    LC3B_OWORD;
      DataOut5    : OUT    LC3B_OWORD;
      DataOut6    : OUT    LC3B_OWORD;
      DataOut7    : OUT    LC3B_OWORD
   );

-- Declarations

END Datas ;

--
-- VHDL Architecture ece411.Datas.struct
--
-- Created:
--          by - baker30.ews (evrt-252-37.ews.illinois.edu)
--          at - 21:56:28 04/18/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;


ARCHITECTURE struct OF Datas IS

   -- Architecture declarations

   -- Internal signal declarations


   -- Component Declarations
   COMPONENT DataArray
   PORT (
      DataIn    : IN     LC3B_OWORD;
      DataWrite : IN     std_logic;
      Index     : IN     LC3B_C_INDEX;
      Reset_L   : IN     std_logic;
      DataOut   : OUT    LC3B_OWORD
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : DataArray USE ENTITY ece411.DataArray;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   DA0 : DataArray
      PORT MAP (
         Reset_L   => RESET_L,
         DataWrite => DataWrite0,
         Index     => Index,
         DataIn    => DataArrayIn,
         DataOut   => DataOut0
      );
   DA1 : DataArray
      PORT MAP (
         Reset_L   => RESET_L,
         DataWrite => DataWrite1,
         Index     => Index,
         DataIn    => DataArrayIn,
         DataOut   => DataOut1
      );
   DA2 : DataArray
      PORT MAP (
         Reset_L   => RESET_L,
         DataWrite => DataWrite2,
         Index     => Index,
         DataIn    => DataArrayIn,
         DataOut   => DataOut2
      );
   DA3 : DataArray
      PORT MAP (
         Reset_L   => RESET_L,
         DataWrite => DataWrite3,
         Index     => Index,
         DataIn    => DataArrayIn,
         DataOut   => DataOut3
      );
   DA4 : DataArray
      PORT MAP (
         Reset_L   => RESET_L,
         DataWrite => DataWrite4,
         Index     => Index,
         DataIn    => DataArrayIn,
         DataOut   => DataOut4
      );
   DA5 : DataArray
      PORT MAP (
         Reset_L   => RESET_L,
         DataWrite => DataWrite5,
         Index     => Index,
         DataIn    => DataArrayIn,
         DataOut   => DataOut5
      );
   DA6 : DataArray
      PORT MAP (
         Reset_L   => RESET_L,
         DataWrite => DataWrite6,
         Index     => Index,
         DataIn    => DataArrayIn,
         DataOut   => DataOut6
      );
   DA7 : DataArray
      PORT MAP (
         Reset_L   => RESET_L,
         DataWrite => DataWrite7,
         Index     => Index,
         DataIn    => DataArrayIn,
         DataOut   => DataOut7
      );

END struct;
