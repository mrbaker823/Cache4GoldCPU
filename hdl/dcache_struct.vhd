-- VHDL Entity ece411.DCache.interface
--
-- Created:
--          by - lachman1.ews (siebl-0220-04.ews.illinois.edu)
--          at - 03:18:15 04/26/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY DCache IS
   PORT( 
      CLK            : IN     STD_LOGIC;
      D_ADDRESS      : IN     LC3B_WORD;
      D_DATAOUT      : IN     LC3B_WORD;
      D_MREAD_L      : IN     STD_LOGIC;
      D_MWRITEH_L    : IN     STD_LOGIC;
      D_MWRITEL_L    : IN     STD_LOGIC;
      D_PMDATAIN     : IN     LC3B_OWORD;
      D_PMRESP_H     : IN     STD_LOGIC;
      RESET_L        : IN     STD_LOGIC;
      D_ADDRESS_pm   : OUT    LC3B_WORD;
      D_DATAIN       : OUT    LC3B_WORD;
      D_DATAOUT_pm   : OUT    LC3B_OWORD;
      D_MREAD_pm_L   : OUT    STD_LOGIC;
      D_MRESP_H      : OUT    STD_LOGIC;
      D_MWRITEL_pm_L : OUT    STD_LOGIC
   );

-- Declarations

END DCache ;

--
-- VHDL Architecture ece411.DCache.struct
--
-- Created:
--          by - lachman1.ews (siebl-0220-04.ews.illinois.edu)
--          at - 03:18:15 04/26/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;


ARCHITECTURE struct OF DCache IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL CacheWrite : std_logic;
   SIGNAL DMissCount : LC3B_Word;
   SIGNAL DMissPlus1 : LC3B_Word;
   SIGNAL DirtyOut   : std_logic;
   SIGNAL Evict_H    : std_logic;
   SIGNAL F          : STD_LOGIC;
   SIGNAL F1         : STD_LOGIC;
   SIGNAL F2         : STD_LOGIC;
   SIGNAL LRUOut     : std_logic;
   SIGNAL MissCount  : std_logic;
   SIGNAL dout       : STD_LOGIC;
   SIGNAL dout1      : std_logic;
   SIGNAL hit        : std_logic;


   -- Component Declarations
   COMPONENT Cache_Controller
   PORT (
      DirtyOut   : IN     std_logic ;
      MREAD_L    : IN     std_logic ;
      MWRITEL_L  : IN     std_logic ;
      PMRESP_H   : IN     STD_LOGIC ;
      RESET_L    : IN     std_logic ;
      clk        : IN     std_logic ;
      hit        : IN     std_logic ;
      CacheWrite : OUT    std_logic ;
      Evict_H    : OUT    std_logic ;
      MissCount  : OUT    std_logic ;
      PMREAD_L   : OUT    STD_LOGIC ;
      PMWRITE_L  : OUT    STD_LOGIC 
   );
   END COMPONENT;
   COMPONENT Cache_Datapath
   PORT (
      ADDRESS    : IN     LC3b_word ;
      CacheWrite : IN     std_logic ;
      DATAOUT    : IN     LC3b_word ;
      Evict_H    : IN     std_logic ;
      MREAD_L    : IN     std_logic ;
      MWRITEH_L  : IN     std_logic ;
      MWRITEL_L  : IN     std_logic ;
      PMDATAIN   : IN     LC3B_OWORD ;
      RESET_L    : IN     std_logic ;
      clk        : IN     std_logic ;
      DATAIN     : OUT    LC3b_word ;
      DirtyOut   : OUT    std_logic ;
      LRUOut     : OUT    std_logic ;
      MRESP_H    : OUT    std_logic ;
      PMADDRESS  : OUT    LC3B_WORD ;
      PMDATAOUT  : OUT    LC3B_OWORD ;
      hit        : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT Plus1
   PORT (
      CLK     : IN     STD_LOGIC;
      DataIn  : IN     LC3B_Word;
      DataOut : OUT    LC3B_Word
   );
   END COMPONENT;
   COMPONENT REG_L
   PORT (
      A       : IN     STD_LOGIC;
      CLK     : IN     STD_LOGIC;
      EN      : IN     STD_LOGIC;
      RESET_L : IN     STD_LOGIC;
      F       : OUT    STD_LOGIC
   );
   END COMPONENT;
   COMPONENT Reg16
   PORT (
      Input  : IN     LC3b_word ;
      RESET  : IN     std_logic ;
      clk    : IN     std_logic ;
      load   : IN     std_logic ;
      Output : OUT    LC3b_word 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : Cache_Controller USE ENTITY ece411.Cache_Controller;
   FOR ALL : Cache_Datapath USE ENTITY ece411.Cache_Datapath;
   FOR ALL : Plus1 USE ENTITY ece411.Plus1;
   FOR ALL : REG_L USE ENTITY ece411.REG_L;
   FOR ALL : Reg16 USE ENTITY ece411.Reg16;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.9) for instance 'U_3' of 'constval'
   dout1 <= '1';

   -- ModuleWare code(v1.9) for instance 'high' of 'constval'
   dout <= '1';

   -- Instance port mappings.
   mDcachControl : Cache_Controller
      PORT MAP (
         DirtyOut   => DirtyOut,
         MREAD_L    => F2,
         MWRITEL_L  => F,
         PMRESP_H   => D_PMRESP_H,
         RESET_L    => RESET_L,
         clk        => CLK,
         hit        => hit,
         CacheWrite => CacheWrite,
         Evict_H    => Evict_H,
         MissCount  => MissCount,
         PMREAD_L   => D_MREAD_pm_L,
         PMWRITE_L  => D_MWRITEL_pm_L
      );
   mDcacheDataPath : Cache_Datapath
      PORT MAP (
         ADDRESS    => D_ADDRESS,
         CacheWrite => CacheWrite,
         DATAOUT    => D_DATAOUT,
         Evict_H    => Evict_H,
         MREAD_L    => F2,
         MWRITEH_L  => F1,
         MWRITEL_L  => F,
         PMDATAIN   => D_PMDATAIN,
         RESET_L    => RESET_L,
         clk        => CLK,
         DATAIN     => D_DATAIN,
         DirtyOut   => DirtyOut,
         LRUOut     => LRUOut,
         MRESP_H    => D_MRESP_H,
         PMADDRESS  => D_ADDRESS_pm,
         PMDATAOUT  => D_DATAOUT_pm,
         hit        => hit
      );
   U_4 : Plus1
      PORT MAP (
         CLK     => CLK,
         DataIn  => DMissCount,
         DataOut => DMissPlus1
      );
   U_0 : REG_L
      PORT MAP (
         RESET_L => RESET_L,
         A       => D_MWRITEL_L,
         EN      => dout,
         CLK     => CLK,
         F       => F
      );
   U_1 : REG_L
      PORT MAP (
         RESET_L => RESET_L,
         A       => D_MWRITEH_L,
         EN      => dout,
         CLK     => CLK,
         F       => F1
      );
   U_2 : REG_L
      PORT MAP (
         RESET_L => RESET_L,
         A       => D_MREAD_L,
         EN      => dout,
         CLK     => CLK,
         F       => F2
      );
   DMissCounter : Reg16
      PORT MAP (
         Input  => DMissPlus1,
         RESET  => RESET_L,
         clk    => MissCount,
         load   => dout1,
         Output => DMissCount
      );

END struct;
