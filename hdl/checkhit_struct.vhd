-- VHDL Entity ece411.CheckHit.interface
--
-- Created:
--          by - lachman1.ews (evrt-252-38.ews.illinois.edu)
--          at - 17:50:06 04/18/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY CheckHit IS
   PORT( 
      TagC0     : IN     std_logic;
      TagC1     : IN     std_logic;
      TagC2     : IN     std_logic;
      TagC3     : IN     std_logic;
      TagC4     : IN     std_logic;
      TagC5     : IN     std_logic;
      TagC6     : IN     std_logic;
      TagC7     : IN     std_logic;
      VBitOut0  : IN     std_logic;
      VBitOut1  : IN     std_logic;
      VBitOut2  : IN     std_logic;
      VBitOut3  : IN     std_logic;
      VBitOut4  : IN     std_logic;
      VBitOut5  : IN     std_logic;
      VBitOut6  : IN     std_logic;
      VBitOut7  : IN     std_logic;
      EncodeHit : OUT    LC3B_8MUX_SEL;
      HitBus    : OUT    std_logic_vector (7 DOWNTO 0);
      hit       : OUT    std_logic
   );

-- Declarations

END CheckHit ;

--
-- VHDL Architecture ece411.CheckHit.struct
--
-- Created:
--          by - lachman1.ews (evrt-252-38.ews.illinois.edu)
--          at - 17:50:07 04/18/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

LIBRARY mp3lib;

ARCHITECTURE struct OF CheckHit IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL Hit0 : std_logic;
   SIGNAL Hit1 : std_logic;
   SIGNAL Hit2 : std_logic;
   SIGNAL Hit3 : std_logic;
   SIGNAL Hit4 : std_logic;
   SIGNAL Hit5 : std_logic;
   SIGNAL Hit6 : std_logic;
   SIGNAL Hit7 : std_logic;


   -- Component Declarations
   COMPONENT ByteBusOUT
   PORT (
      In0  : IN     std_logic ;
      In1  : IN     std_logic ;
      In2  : IN     std_logic ;
      In3  : IN     std_logic ;
      In4  : IN     std_logic ;
      In5  : IN     std_logic ;
      In6  : IN     std_logic ;
      In7  : IN     std_logic ;
      Out0 : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT Encoder8to3
   PORT (
      hit0      : IN     STD_LOGIC ;
      hit1      : IN     STD_LOGIC ;
      hit2      : IN     STD_LOGIC ;
      hit3      : IN     STD_LOGIC ;
      hit4      : IN     STD_LOGIC ;
      hit5      : IN     STD_LOGIC ;
      hit6      : IN     STD_LOGIC ;
      hit7      : IN     STD_LOGIC ;
      EncodeHit : OUT    LC3B_8MUX_SEL 
   );
   END COMPONENT;
   COMPONENT OR8
   PORT (
      A      : IN     std_logic ;
      B      : IN     std_logic ;
      C      : IN     std_logic ;
      D      : IN     std_logic ;
      E      : IN     std_logic ;
      F      : IN     std_logic ;
      G      : IN     std_logic ;
      H      : IN     std_logic ;
      Output : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT AND2
   PORT (
      A : IN     STD_LOGIC ;
      B : IN     STD_LOGIC ;
      F : OUT    STD_LOGIC 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : AND2 USE ENTITY mp3lib.AND2;
   FOR ALL : ByteBusOUT USE ENTITY ece411.ByteBusOUT;
   FOR ALL : Encoder8to3 USE ENTITY ece411.Encoder8to3;
   FOR ALL : OR8 USE ENTITY ece411.OR8;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_10 : ByteBusOUT
      PORT MAP (
         In0  => Hit0,
         In1  => Hit1,
         In2  => Hit2,
         In3  => Hit3,
         In4  => Hit4,
         In5  => Hit5,
         In6  => Hit6,
         In7  => Hit7,
         Out0 => HitBus
      );
   U_9 : Encoder8to3
      PORT MAP (
         hit0      => Hit0,
         hit1      => Hit1,
         hit2      => Hit2,
         hit3      => Hit3,
         hit4      => Hit4,
         hit5      => Hit5,
         hit6      => Hit6,
         hit7      => Hit7,
         EncodeHit => EncodeHit
      );
   U_8 : OR8
      PORT MAP (
         A      => Hit0,
         B      => Hit1,
         C      => Hit2,
         D      => Hit3,
         E      => Hit4,
         F      => Hit5,
         G      => Hit6,
         H      => Hit7,
         Output => hit
      );
   U_0 : AND2
      PORT MAP (
         A => VBitOut0,
         B => TagC0,
         F => Hit0
      );
   U_1 : AND2
      PORT MAP (
         A => VBitOut1,
         B => TagC1,
         F => Hit1
      );
   U_2 : AND2
      PORT MAP (
         A => VBitOut2,
         B => TagC2,
         F => Hit2
      );
   U_3 : AND2
      PORT MAP (
         A => VBitOut3,
         B => TagC3,
         F => Hit3
      );
   U_4 : AND2
      PORT MAP (
         A => VBitOut4,
         B => TagC4,
         F => Hit4
      );
   U_5 : AND2
      PORT MAP (
         A => VBitOut5,
         B => TagC5,
         F => Hit5
      );
   U_6 : AND2
      PORT MAP (
         A => VBitOut6,
         B => TagC6,
         F => Hit6
      );
   U_7 : AND2
      PORT MAP (
         A => VBitOut7,
         B => TagC7,
         F => Hit7
      );

END struct;
