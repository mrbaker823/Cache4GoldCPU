-- VHDL Entity ece411.L2Cache.symbol
--
-- Created:
--          by - lachman1.ews (siebl-0220-04.ews.illinois.edu)
--          at - 03:18:14 04/26/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY L2Cache IS
   PORT( 
      CLK       : IN     std_logic;
      L1ADDRESS : IN     LC3B_WORD;
      L1DATAOUT : IN     LC3B_OWORD;
      MREAD_L   : IN     std_logic;
      MWRITE_L  : IN     std_logic;
      PMDATAIN  : IN     LC3B_OWORD;
      PMRESP_H  : IN     STD_LOGIC;
      RESET_L   : IN     std_logic;
      DataIn    : OUT    LC3B_OWORD;
      MRESP_H   : OUT    std_logic;
      PMADDRESS : OUT    LC3B_WORD;
      PMDATAOUT : OUT    LC3B_OWORD;
      PMREAD_L  : OUT    STD_LOGIC;
      PMWRITE_L : OUT    STD_LOGIC
   );

-- Declarations

END L2Cache ;

--
-- VHDL Architecture ece411.L2Cache.struct
--
-- Created:
--          by - lachman1.ews (siebl-0220-04.ews.illinois.edu)
--          at - 03:18:15 04/26/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;


ARCHITECTURE struct OF L2Cache IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL CacheWrite  : std_logic;
   SIGNAL DirtyOut    : std_logic;
   SIGNAL Evict_H     : std_logic;
   SIGNAL L2MissCount : LC3B_Word;
   SIGNAL L2MissPlus1 : LC3B_Word;
   SIGNAL LRUOut      : LC3B_8MUX_SEL;
   SIGNAL MissCount   : std_logic;
   SIGNAL dout        : std_logic;
   SIGNAL hit         : std_logic;


   -- Component Declarations
   COMPONENT Cache_Controller
   PORT (
      DirtyOut   : IN     std_logic ;
      MREAD_L    : IN     std_logic ;
      MWRITEL_L  : IN     std_logic ;
      PMRESP_H   : IN     STD_LOGIC ;
      RESET_L    : IN     std_logic ;
      clk        : IN     std_logic ;
      hit        : IN     std_logic ;
      CacheWrite : OUT    std_logic ;
      Evict_H    : OUT    std_logic ;
      MissCount  : OUT    std_logic ;
      PMREAD_L   : OUT    STD_LOGIC ;
      PMWRITE_L  : OUT    STD_LOGIC 
   );
   END COMPONENT;
   COMPONENT L2_Datapath
   PORT (
      CLK        : IN     std_logic ;
      CacheWrite : IN     std_logic ;
      Evict_H    : IN     std_logic ;
      L1ADDRESS  : IN     LC3B_WORD ;
      L1DATAOUT  : IN     LC3B_OWORD ;
      MREAD_L    : IN     std_logic ;
      MWRITE_L   : IN     std_logic ;
      PMDATAIN   : IN     LC3B_OWORD ;
      RESET_L    : IN     std_logic ;
      DataIn     : OUT    LC3B_OWORD ;
      DirtyOut   : OUT    std_logic ;
      LRUout     : OUT    LC3B_8MUX_SEL ;
      MRESP_H    : OUT    std_logic ;
      PMADDRESS  : OUT    LC3B_WORD ;
      PMDATAOUT  : OUT    LC3B_OWORD ;
      hit        : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT Plus1
   PORT (
      CLK     : IN     STD_LOGIC;
      DataIn  : IN     LC3B_Word;
      DataOut : OUT    LC3B_Word
   );
   END COMPONENT;
   COMPONENT Reg16
   PORT (
      Input  : IN     LC3b_word ;
      RESET  : IN     std_logic ;
      clk    : IN     std_logic ;
      load   : IN     std_logic ;
      Output : OUT    LC3b_word 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : Cache_Controller USE ENTITY ece411.Cache_Controller;
   FOR ALL : L2_Datapath USE ENTITY ece411.L2_Datapath;
   FOR ALL : Plus1 USE ENTITY ece411.Plus1;
   FOR ALL : Reg16 USE ENTITY ece411.Reg16;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.9) for instance 'U_1' of 'constval'
   dout <= '1';

   -- Instance port mappings.
   U_0 : Cache_Controller
      PORT MAP (
         DirtyOut   => DirtyOut,
         MREAD_L    => MREAD_L,
         MWRITEL_L  => MWRITE_L,
         PMRESP_H   => PMRESP_H,
         RESET_L    => RESET_L,
         clk        => CLK,
         hit        => hit,
         CacheWrite => CacheWrite,
         Evict_H    => Evict_H,
         MissCount  => MissCount,
         PMREAD_L   => PMREAD_L,
         PMWRITE_L  => PMWRITE_L
      );
   L2dp : L2_Datapath
      PORT MAP (
         CLK        => CLK,
         CacheWrite => CacheWrite,
         Evict_H    => Evict_H,
         L1ADDRESS  => L1ADDRESS,
         L1DATAOUT  => L1DATAOUT,
         MREAD_L    => MREAD_L,
         MWRITE_L   => MWRITE_L,
         PMDATAIN   => PMDATAIN,
         RESET_L    => RESET_L,
         DataIn     => DataIn,
         DirtyOut   => DirtyOut,
         LRUOut     => LRUOut,
         MRESP_H    => MRESP_H,
         PMADDRESS  => PMADDRESS,
         PMDATAOUT  => PMDATAOUT,
         hit        => hit
      );
   U_2 : Plus1
      PORT MAP (
         CLK     => CLK,
         DataIn  => L2MissCount,
         DataOut => L2MissPlus1
      );
   L2MissCounter : Reg16
      PORT MAP (
         Input  => L2MissPlus1,
         RESET  => RESET_L,
         clk    => MissCount,
         load   => dout,
         Output => L2MissCount
      );

END struct;
